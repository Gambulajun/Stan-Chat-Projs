<!DOCTYPE html>
<html>
<head>
    <title>Resource Booking App</title>
    <!-- Flatpickr for date selection -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .hidden { display: none; }
        .container { max-width: 800px; margin: auto; }
        .login-box, .audit-box, .resources-box {
            border: 1px solid #ccc; padding: 20px; margin-top: 20px;
            border-radius: 8px; background: #f9f9f9;
        }
        .nav-list li { margin-bottom: 10px; }
        .btn { padding: 6px 12px; margin: 5px; }
    </style>
</head>
<body>
<div class="container">

    <!-- LOGIN PAGE -->
    <div id="loginPage" class="login-box">
        <h2>Login</h2>
        <div>
            <label>Username</label><br>
            <input type="text" id="username" placeholder="Username"><br><br>
            <label>Password</label><br>
            <input type="password" id="password" placeholder="Password"><br><br>
            <button class="btn" onclick="login()">Login</button>
        </div>
    </div>

    <!-- INDEX PAGE (list of audits) -->
    <div id="indexPage" class="audit-box hidden">
        <h2>Select an Audit</h2>
        <ul id="auditList" class="nav-list"></ul>
        <button class="btn" onclick="logout()">Logout</button>
    </div>

    <!-- VIEW RESOURCES PAGE -->
    <div id="resourcesPage" class="resources-box hidden">
        <h2>Audit Resources</h2>
        <p id="selectedAudit"></p>
        <div id="employeeList"></div>
        <button class="btn" onclick="backToIndex()">Back</button>
    </div>

</div>

<!-- JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    // ---- LOGIN LOGIC ----
    function login() {
        const u = document.getElementById("username").value;
        const p = document.getElementById("password").value;
        if (u === "admin" && p === "password") {
            document.getElementById("loginPage").classList.add("hidden");
            document.getElementById("indexPage").classList.remove("hidden");
            loadAudits();
        } else {
            alert("Invalid login. Try admin/password for demo.");
        }
    }

    function logout() {
        document.getElementById("indexPage").classList.add("hidden");
        document.getElementById("loginPage").classList.remove("hidden");
    }

    // ---- AUDIT LIST ----
    function loadAudits() {
        // Replace this with backend fetch later
        const audits = [
            {number: "2025-US-AU3003043", title: "Business Continuity Management, US"},
            {number: "2025-US-AU3002923", title: "Cybersecurity Audit, US"}
        ];
        const ul = document.getElementById("auditList");
        ul.innerHTML = "";
        audits.forEach(a => {
            const li = document.createElement("li");
            li.innerHTML = `<a href="#" onclick="viewResources('${a.number}','${a.title}')">${a.number} - ${a.title}</a>`;
            ul.appendChild(li);
        });
    }

    // ---- RESOURCES ----
    function viewResources(auditNum, auditTitle) {
        document.getElementById("indexPage").classList.add("hidden");
        document.getElementById("resourcesPage").classList.remove("hidden");
        document.getElementById("selectedAudit").innerHTML =
            `<b>${auditNum}</b> - ${auditTitle}`;

        // Dummy employees (replace with backend call)
        const employees = [
            {psid: "1563311", name: "Fong, King Yin", role: "Team Manager"},
            {psid: "1350153", name: "Wu, Yu Fei", role: "Auditor"}
        ];
        const list = employees.map(e => 
            `<p>${e.name} (${e.role}) - PSID: ${e.psid}</p>`
        ).join("");
        document.getElementById("employeeList").innerHTML = list;
    }

    function backToIndex() {
        document.getElementById("resourcesPage").classList.add("hidden");
        document.getElementById("indexPage").classList.remove("hidden");
    }
</script>
</body>
</html>

#backend
from flask import request, jsonify
import dataiku, pandas as pd, io
from datetime import datetime

# --- Config ---
OUTPUT_DATASET = "output_csv"       # dataset you uploaded
BOOKINGS_FOLDER = "bookings_folder" # managed folder you created
BOOKINGS_FILE = "bookings.csv"

output_ds = dataiku.Dataset(OUTPUT_DATASET)
bookings_folder = dataiku.Folder(BOOKINGS_FOLDER)

# --- Helpers ---
def load_bookings():
    try:
        with bookings_folder.get_download_stream(BOOKINGS_FILE) as stream:
            return pd.read_csv(stream, parse_dates=['BookedFrom','BookedTo'])
    except:
        cols = ['audit_number','audit_title','PSID','FullName','Role','Phase','BookedFrom','BookedTo','Timestamp']
        return pd.DataFrame(columns=cols)

def save_bookings(df):
    buf = io.StringIO()
    df.to_csv(buf, index=False)
    buf.seek(0)
    bookings_folder.upload_stream(BOOKINGS_FILE, buf)

# --- API Endpoints ---

@app.route("/get_audits")
def get_audits():
    df = output_ds.get_dataframe()
    audits = df[['audit_number','audit_title']].drop_duplicates()
    return jsonify(audits.to_dict(orient="records"))

@app.route("/get_employees/<audit_number>")
def get_employees(audit_number):
    df = output_ds.get_dataframe()
    subset = df[df['audit_number'] == audit_number]
    employees = subset[['PSID','FullName','JobTitle','RecommendedRole']].drop_duplicates()
    return jsonify(employees.to_dict(orient="records"))

@app.route("/add_booking", methods=["POST"])
def add_booking():
    data = request.get_json()
    df = load_bookings()
    new_row = {
        'audit_number': data['audit_number'],
        'audit_title': data.get('audit_title', ''),
        'PSID': data['PSID'],
        'FullName': data['FullName'],
        'Role': data.get('Role',''),
        'Phase': data.get('Phase',''),
        'BookedFrom': data['BookedFrom'],
        'BookedTo': data['BookedTo'],
        'Timestamp': datetime.now().isoformat()
    }
    df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
    save_bookings(df)
    return jsonify({"status":"ok","message":"Booking saved"})

#Load HTML
function loadAudits() {
    fetch("/get_audits")
    .then(r => r.json())
    .then(audits => {
        const ul = document.getElementById("auditList");
        ul.innerHTML = "";
        audits.forEach(a => {
            const li = document.createElement("li");
            li.innerHTML = `<a href="#" onclick="event.preventDefault(); viewResources('${a.audit_number}','${a.audit_title}')">${a.audit_number} - ${a.audit_title}</a>`;
            ul.appendChild(li);
        });
    });
}


function viewResources(auditNum, auditTitle) {
    document.getElementById("indexPage").classList.add("hidden");
    document.getElementById("resourcesPage").classList.remove("hidden");
    document.getElementById("selectedAudit").innerHTML = `<b>${auditNum}</b> - ${auditTitle}`;

    fetch(`/get_employees/${auditNum}`)
    .then(r => r.json())
    .then(employees => {
        const list = employees.map(e => 
            `<p>${e.FullName} (${e.JobTitle}) - PSID: ${e.PSID} - Role: ${e.RecommendedRole}
             <button onclick="bookEmployee('${auditNum}','${e.PSID}','${e.FullName}')">Book</button></p>`
        ).join("");
        document.getElementById("employeeList").innerHTML = list;
    });
}


function bookEmployee(auditNum, psid, fullName) {
    const booking = {
        audit_number: auditNum,
        PSID: psid,
        FullName: fullName,
        Role: "Team Member",
        BookedFrom: "2025-09-10",
        BookedTo: "2025-09-12"
    };

    fetch("/add_booking", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(booking)
    })
    .then(r => r.json())
    .then(res => {
        alert(res.message);
    });
}


